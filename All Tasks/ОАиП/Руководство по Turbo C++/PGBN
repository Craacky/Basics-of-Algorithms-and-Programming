                        ПРИЛОЖЕНИЕ В.
      ПЕРЕКРЕСТНЫЕ ССЫЛКИ БИБЛИОТЕКИ ВРЕМЕНИ ВЫПОЛНЕНИЯ.

     Это приложение  является обзором библиотечных подпрограмм
Borland C++ и включенных файлов.
     В этой главе:
     - объясняется,  зачем может понадобиться исходный код для
библиотек времени выполнения Borland C++;
     - перечисляются и описываются файлы заголовков;
     - описываются  различные  категории заданий,  выполняемых
библиотечными подпрограммами.
     Borland C++ поставляется с 450 функциями и макросами, ко-
торые можно вызвать из программ С и С++ для выполнения широко-
го диапазона задач, включая В/В высокого и низкого уровня, ма-
нипуляцию строками и файлами, распределение памяти, управление
процессом, преобразование данных,  математические вычисления и
т.д. Каждая из этих функций и макро, называемых подпрограммами
библиотек, описана в Справочном руководстве по библиотекам.
     Подпрограммы Borland C++ находятся в библиотечных  файлах
(Cx.LIB, CPx.LIB, MATHx.LIB и GRAPHICS.LIB). Поскольку Borland
C++ поддерживает 6 различных моделей  памяти,  каждая  модель,
кроме модели Tiny, имеет свой собственный библиотечный и мате-
матический файлы,  содержащие версии  подпрограмм,  написанных
для этой конкретной модели.  (Модель Tiny разделяет библиотеч-
ный и математический файлы модели Small).
     Borland C++ реализует стандарт ANSI C, который среди дру-
гих вещей допускает,  чтобы  прототипы  функции  давались  для
подпрограмм Ваших  программ  С.  Все библиотечные подпрограммы
Borland C++ объявляются с прототипами в одном или более файлах
заголовков.
     Примечание: В С++ Вы ДОЛЖНЫ всегда использовать  прототи-
пы.

  Причины для  доступа  к исходному коду библиотеки времени
                         выполнения.

     Есть несколько основательных причин, почему Вам может по-
надобиться исходный код для подпрограмм библиотеки времени вы-
полнения:
     - Вы можете обнаружить,  что конкретная функция,  которую
Вы хотите написать, подобна, но не совсем совпадает с функцией
Borland C++.  Имея  доступ к исходному коду библиотеки времени
выполнения, Вы можете приспособить функцию библиотеки в  соот-
ветствии со своими интересами,  и в то же время избежите необ-
ходимости написания новой функции.
     - Иногда при отладке кода Вам может понадобиться информа-
ция о внутреннем коде библиотечной функции.  Наличие исходного
кода библиотеки времени выполнения сослужит Вам хорошую службу
в этой ситуации.
     - Вам  может  понадобиться  удалить ведущие подчеркивания
символов С.  Доступ к исходному коду библиотеки времени выпол-
нения позволит легко сделать это.
     - Может, Вам захочется изучить профессионально написанных
исходный код библиотеки.
     Поскольку Borland живет строго в соответствии с концепци-
ями "открытой  архитектуры",  исходный  код библиотеки времени
выполнения Borland C++ был сделан доступным для всех.

                Файлы заголовков Borland C++.

     Файлы заголовков,  так же называемые  файлами  включений,
предоставляют объявление  прототипов  функций для библиотечных
функций. В них так же определяются типы данных и символические
константы, используемые библиотечными функциями, вместе с гло-
бальными переменными,  определенными в Borland C++ и в библио-
течных функциях. Библиотека Borland C++ следует стандарту ANSI
C при названии файлов заголовков и по их содержанию.
     Примечание: Файлы заголовков С++ и файлы заголовков,  оп-
ределенные ANSI C, помечены на полях.

     alloc.h
     Объявляет функции   управления   памятью  (распределение,
освобождение и т.д.).

     assert.h (ANSI C)
     Объявляет макро отладки assert.

     bcd.h
     Объявляет класс С++ bcd и перегружает операторы для мате-
матических функций bcd и для bcd.

     bios.h
     Объявляет различные  функции,  используемые  при  вызовах
подпрограмм IBM PC ROM BIOS.

     complex.h
     Объявляет комплексные математические функции С++.

     conio.h
     Объявляет различные  функции,  используемые при вызовах в
подпрограммах консольного В/В DOS.

     ctype.h  (ANSI C)
     Содержит информацию, используемую классификацией символов
и макросами  преобразования  символов  (такими  как   isalpha,
toascii).

     dir.h
     Содержит структуры, макросы и функции для работы со спра-
вочниками и именами пути.

     dos.h
     Определяет различные константы и дает объявления, необхо-
димые для вызовов DOS и 8086.

     errno.h (ANSI C)
     Определяет мнемонику констант для кодов и ошибок.

     fcntl.h
     Определяет символические константы,  используемые в связи
с библиотечной подпрограммой Open.

     float.h (ANSI C)
     Содержит параметры для подпрограмм с плавающей точкой.

     fstream.h
     Объявляет классы потоков С++, поддерживающие В/В файла.

     generic.h
     Содержит макросы для общих объявлений классов.

     graphics.h
     Объявляет прототипы для графических функций.

     io.h
     Содержит структуры и объявления для подпрограмм низкого и
высокого уровня В/В.

     iomanip.h
     Объявляет манипулятор  В/В потоков С++ и содержит макросы
для создания параметризованных манипуляторов.

     iostream.h
     Объявляет основные подпрограммы потоков С++.

     limits.h (ANSI C)
     Содержит параметры среды, информацию об ограничениях ком-
пиляции и диапазоне целых чисел.

     locale.h (ANSI C)
     Объявляет функции,  которые  предоставляют  информацию  о
стране и об языке.

     math.h (ANSI C)
     Объявляет прототипы для математических  функций;  так  же
определяет макро  HUGE_VAL и объявляет исключительную структу-
ру, используемую подпрограммой matherr.

     mem.h
     Объявляет функции  манипуляции памятью (многие из них так
же определяются в string.h).

     process.h
     Содержит структуры  и  объявления для функций spawn...  и
exec...

     setjmp.h (ANSI C)
     Определяет тип jmp_buf,  используемый функциями longjmp и
setjmp и объявляет подпрограмму longjmp и setjmp.

     share.h
     Определяет параметры,  используемые  в функциях,  которые
используют разделение файлов.

     signal.h (ANSI C)
     Определяет константы и объявления для использования функ-
циями signal и raise.

     stdarg.h (ANSI C)
     Определяет макросы,  используемые для чтения списка аргу-
ментов в функциях,  объявленных для принятия переменного коли-
чества аргументов (таких как vprintf, vscanf и т.д.).

     stdef.h (ANSI C)
     Определяет несколько общих типов данных и макросов.

     stdio.h (ANSI C)
     Определяет типы  и макросы,  необходимые для стандартного
пакета В/В, определенного в Кернигане и Ритчи и расширенного в
системе UNIX 5. Определяет стандартные предопределенные потоки
В/В stdin,  stdout, stdprn и stderror и объявляет подпрограмму
В/В уровня потоков.

     stdiostr.h
     Объявляет классы потоков в С++ (версия 2.0) для использо-
вания со структурами stdio FILE.

     stdlib.h (ANSI C)
     Объявляет несколько общих используемых подпрограмм: подп-
рограмм преобразования, подпрограмм поиска/сортировки и др.

     stream.h
     Объявляет подпрограммы потоков (В/В) С++ (версия 1.2).

     string.h (ANSI C)
     Объявляет несколько  подпрограмм  манипуляции  строками и
манипуляции памятью.

     strstrea.h
     Объявляет классы потоков С++ для использования с байтовы-
ми массивами в памяти.

     sys\stat.h
     Определяет символические константы, используемые для отк-
рытия и создания файла.

     sys\timeb.h
     Объявляет функцию ftime и структуру timeb,  которую возв-
ращает ftime.

     sys\types.h
     Объявляет тип time_t, используемый функциями времени.

     time.h (ANSI C)
     Определяет структуру, заполняемую подпрограммами преобра-
зования времени asctime, localtime и gmtime и типы, используе-
мые подпрограммами ctime, difftime, gmtime, localtime и stime;
так же предоставляет прототипы для этих подпрограмм.

     values.h
     Определяет важные  константы,  включая  машиннозависимые;
обеспечивает совместимость с системой UNIX 5.

            Подпрограммы библиотек по категориям.

     Библиотечные подпрограммы Borland C++ выполняют множество
задач. В этом разделе подпрограммы вместе с файлами включений,
в которых они объявлены, будут перечислены по нескольким общим
категориям выполняемых задач.  Полную информацию  о  нижепере-
численных функциях см.  в главе 2 "Библиотека времени выполне-
ния" справочника по библиотекам.

                  Подпрограммы классификации.

     Эти подпрограммы классифицируют символы ASCI  как  буквы,
управляющие символы, пунктуацию, прописные буквы и т.д.
     isalnum (ctype.h)         islower (ctype.h)
     isalpha (ctype.h)         isprint (ctype.h)
     isascii (ctype.h)         ispunct (ctype.h)
     iscntrl (ctype.h)         isspace (ctype.h)
     isdigit (ctype.h)         isupper (ctype.h)
     isgraph (ctype.h)         isxdigit (ctype.h)

                 Подпрограммы преобразования.

     Эти подпрограммы  преобразуют символы и строки из alpha в
различные числовые представления (с плавающей  точкой,  целые,
длинные) и наоборот,  и из прописных букв в строчные, и наобо-
рот.
atof (stdlib.h)    itoa    (stdlib.h)    _tolower (ctype.h)
atoi (stdlib.h)    ltoa    (stdlib.h)    tolower  (ctype.h)
atol (stdlib.h)    strtod  (stdlib.h)    _toupper (ctype.h)
ecvt (stdlib.h)    strtol  (stdlib.h)    toupper  (ctype.h)
fcvt (stdlib.h)    strtoul (stdlib.h)    ultoa    (stdlib.h)
gcvt (stdlib.h)    toascii (ctype.h)

            Подпрограммы управления справочниками.

     Эти подпрограммы манипулируют справочниками и именами пу-
тей.
chdir     (dir.h)    fnsplit   (dir.h)    mkdir      (dir.h)
findfirst (dir.h)    getcurdir (dir.h)    mktemp     (dir.h)
findnext  (dir.h)    getcwd    (dir.h)    rmdir      (dir.h)
fnmerge   (dir.h)    getdisk   (dir.h)    searchpath (dir.h)
                                          setdisk    (dir.h)

                Диагностические подпрограммы.

     Эти подпрограммы   предоставляют  встроенную  возможность
отыскания ошибок.
           assert  (assert.h)
           matherr (math.h)
           perror  (errno.h)

                  Графические подпрограммы.

     Эти подпрограммы   позволяют   использовать   графику   с
текстом.
arc               (graphics.h)   getfillpattern  (graphics.h)
bar               (graphics.h)   getfillsettings (graphics.h)
bar3d             (graphics.h)   getgraphmode    (graphics.h)
circle            (graphics.h)   getimage        (graphics.h)
cleardevice       (graphics.h)   getlinesettings (graphics.h)
clearviewport     (graphics.h)   getmaxcolor     (graphics.h)
closegraph        (graphics.h)   getmaxmode      (graphics.h)
detectgraph       (graphics.h)   getmaxx         (graphics.h)
drawpoly          (graphics.h)   getmaxy         (graphics.h)
ellipse           (graphics.h)   getmodename     (graphics.h)
fillellipse       (graphics.h)   getmoderange    (graphics.h)
fillpoly          (graphics.h)   getpallete      (graphics.h)
floodfill         (graphics.h)   getpalletesize  (graphics.h)
getarccoords      (graphics.h)   getpixel        (graphics.h)
getaspectratio    (graphics.h)   gettextsettings (graphics.h)
getbkcolor        (graphics.h)   getviewsettings (graphics.h)
getcolor          (graphics.h)   getx            (graphics.h)
getdefaultpallete (graphics.h)   gety            (graphics.h)
getdrivername     (graphics.h)   graphdefaults   (graphics.h)
grapherrormsg     (graphics.h)   sector          (graphics.h)
_graphfreemem     (graphics.h)   setactivepage   (graphics.h)
_graphgetmem      (graphics.h)   setallpallete   (graphics.h)
graphresult       (graphics.h)   setaspectratio  (graphics.h)
imagesize         (graphics.h)   setbkcolor      (graphics.h)
initgraph         (graphics.h)   setcolor        (graphics.h)
installuserdriver (graphics.h)   setcursortype   (conio.h)
installuserfont   (graphics.h)   setfillpattern  (graphics.h)
line              (graphics.h)   setfillstyle    (graphics.h)
linerel           (graphics.h)   setgraphbufsize (graphics.h)
lineto            (graphics.h)   setgraphmode    (graphics.h)
moverel           (graphics.h)   setlinestyle    (graphics.h)
moveto            (graphics.h)   setpallete      (graphics.h)
outtext           (graphics.h)   setrgbpallete   (graphics.h)
outtextxy         (graphics.h)   settextjustify  (graphics.h)
pieslice          (graphics.h)   settextstyle    (graphics.h)
putimage          (graphics.h)   setusercharsize (graphics.h)
putpixel          (graphics.h)   setviewport     (graphics.h)
rectangle         (graphics.h)   setvisualpage   (graphics.h)
registerbgidriver (graphics.h)   setwritemode    (graphics.h)
registerbgifont   (graphics.h)   textheight      (graphics.h)
restorecrtmode    (graphics.h)   textwidth       (graphics.h)

               Подпрограммы ввода вывода (В/В).

     Эти подпрограммы предоставляют возможности В/В на  уровне
потоков или DOS.
access     (io.h)            feof          (stdio.h)
cgets      (conio.h)         ferror        (stdio.h)
_chmod     (io.h)            fflush        (stdio.h)
chmod      (io.h)            fgetc         (stdio.h)
chsize     (io.h)            fgetchar      (stdio.h)
clearerr   (stdio.h)         fgetpos       (stdio.h)
_close     (io.h)            fgets         (stdio.h)
close      (io.h)            filelength    (io.h)
cprintf    (conio.h)         fileno        (stdio.h)
cputs      (conio.h)         flushall      (stdio.h)
_creat     (io.h)            fopen         (stdio.h)
creat      (io.h)            fprintf       (stdio.h)
creatnew   (io.h)            fputc         (stdio.h)
creattemp  (io.h)            fputchar      (stdio.h)
cscanf     (conio.h)         fputs         (stdio.h)
dup        (io.h)            fread         (stdio.h)
dup2       (io.h)            freopen       (stdio.h)
eof        (io.h)            fscanf        (stdio.h)
fclose     (stdio.h)         fseek         (stdio.h)
fcloseall  (stdio.h)         fsetpos       (stdio.h)
fdopen     (stdio.h)         fstat         (sys/stat.h)
ftell      (stdio.h)         rename        (stdio.h)
fwrite     (stdio.h)         rewind        (stdio.h)
getc       (stdio.h)         scanf         (stdio.h)
getch      (conio.h)         setbuf        (stdio.h)
getchar    (stdio.h)         setcursortype (conio.h)
getche     (conio.h)         setftime      (io.h)
getftime   (io.h)            setmode       (io.h)
getpass    (conio.h)         setvbuf       (stdio.h)
gets       (stdio.h)         sopen         (io.h)
getw       (stdio.h)         sprintf       (stdio.h)
ioctl      (io.h)            sscanf        (stdio.h)
isatty     (io.h)            stat          (sys/stat.h)
kbhit      (conio.h)         _sterror      (string.h, stdio.h)
lock       (io.h)            strerror      (stdio.h)
lseek      (io.h)            tell          (io.h)
_open      (io.h)            tmpfile       (stdio.h)
open       (io.h)            tmpnam        (stdio.h)
perror     (stdio.h)         ungetc        (stdio.h)
printf     (stdio.h)         ungetch       (conio.h)
putc       (stdio.h)         unlock        (io.h)
putch      (conio.h)         vfprintf      (stdio.h)
putchar    (stdio.h)         vfscanf       (stdio.h)
puts       (stdio.h)         vprintf       (stdio.h)
putw       (stdio.h)         vscanf        (stdio.h)
_read      (io.h)            vsprintf      (stdio.h)
read       (io.h)            vsscanf       (io.h)
remove     (stdio.h)         _write        (io.h)

          Подпрограммы интерфейса (DOS, 8086, BIOS).

     Эти подпрограммы предоставляют машиннозависимые  свойства
и свойства DOS и BIOS.
absread    (dos.h)    FP_OFF       (dos.h)    inportb  (dos.h)
abswrite   (dos.h)    FP_SEG       (dos.h)    int86    (dos.h)
bdos       (dos.h)    freemem      (dos.h)    int86x   (dos.h)
bdosptr    (dos.h)    geninterrupt (dos.h)    intdos   (dos.h)
bioscom    (bios.h)   getcbrk      (dos.h)    intdosx  (dos.h)
biosdisk   (bios.h)   getdfree     (dos.h)    intr     (dos.h)
biosequip  (bios.h)   getdta       (dos.h)    keep     (dos.h)
bioskey    (bios.h)   getfat       (dos.h)    MK_FP    (dos.h)
biosmemory (bios.h)   getfatd      (dos.h)    outport  (dos.h)
biosprint  (bios.h)   getpsp       (dos.h)    outportb (dos.h)
biostime   (bios.h)   getvect      (dos.h)    parsfnm  (dos.h)
country    (dos.h)    getverify    (dos.h)    peek     (dos.h)
ctrbrk     (dos.h)    harderr      (dos.h)    peekb    (dos.h)
disable    (dos.h)    hardresume   (dos.h)    poke     (dos.h)
dosexterr  (dos.h)    hardretn     (dos.h)    pokeb    (dos.h)
enable     (dos.h)    inport       (dos.h)    randbrd  (dos.h)
randbwr    (dos.h)    setdta       (dos.h)    sleep    (dos.h)
segread    (dos.h)    setvect      (dos.h)    unlink   (dos.h)
setcbrk    (dos.h)    setverify    (dos.h)

                  Подпрограммы манипуляции.

     Эти подпрограммы обрабатывают строки и блоки памяти:  ко-
пирование, сравнение, преобразование и поиск.
memccpy   (mem.h, string.h)      stricmp   (string.h)
memchr    (mem.h, string.h)      strcmpi   (string.h)
memcmp    (mem.h, string.h)      strlen    (string.h)
memcpy    (mem.h, string.h)      strlwr    (string.h)
memicmp   (mem.h, string.h)      strncat   (string.h)
memmove   (mem.h, string.h)      strncmp   (string.h)
memset    (mem.h, string.h)      strncmpi  (string.h)
movedata  (mem.h, string.h)      strncpy   (string.h)
movmem    (mem.h, string.h)      strnicmp  (string.h)
setmem    (mem.h)                strnset   (string.h)
stpcpy    (string.h)             strpbrk   (string.h)
strcat    (string.h)             strrchr   (string.h)
strchr    (string.h)             strrev    (string.h)
strcmp    (string.h)             strset    (string.h)
strcoll   (string.h)             strspn    (string.h)
strcpy    (string.h)             strstr    (string.h)
strcspn   (string.h)             strtok    (string.h)
strdup    (string.h)             strupr    (string.h)
strerror  (string.h)             strxfrm   (string.h)

                 Математические подпрограммы.

     Эти подпрограммы выполняют  математические  вычисления  и
преобразования.
abs      (complex.h, stdlib.h) _control87  (float.h)
acos     (complex.h, math.h)   cos         (complex.h, math.h)
arg      (complex.h)           cosh        (complex.h, math.h)
asin     (complex.h, math.h)   div         (math.h)
atan     (complex.h, math.h)   ecvt        (stdlib.h)
atan2    (complex.h, math.h)   exp         (math.h)
atof     (stdlib.h, math.h)    fabs        (math.h)
atoi     (stdlib.h)            fcvt        (stdlib.h)
atol     (stdlib.h)            floor       (math.h)
bcd      (bcd.h)               fmod        (math.h)
cabs     (math.h)              _fpreset    (float.h)
ceil     (math.h)              frexp       (math.h)
_clear87 (float.h)             gcvt        (stdlib.h)
complex  (complex.h)           hypot       (math.h)
conj     (complex.h)           imag        (complex.h)
itoa     (stdlib.h)            rand        (stdlib.h)
labs     (stdlib.h)            random      (stdlib.h)
ldexp    (math.h)              randomize   (stdlib.h)
ldiv     (math)                real        (complex.h)
log      (complex.h, math.h)   _rotl       (stdlib.h)
log10    (complex.h, math.h)   _rotr       (stdlib.h)
_lrotl   (stdlib.h)            sin         (complex.h, math.h)
_lrotr   (stdlib.h)            sinh        (complex.h, math.h)
ltoa     (stdlib.h)            sqrt        (complex.h, math.h)
_matherr (math.h)              srand       (stdlib.h)
matherr  (math.h)              _status87   (float.h)
modf     (math.h)              strtod      (stdlib.h)
norm     (complex.h)           strtol      (stdlib.h)
polar    (complex.h)           strtoul     (stdlib.h)
poly     (math.h)              tan         (complex.h, math.h)
pow      (complex.h, math.h)   tanh        (complex.h, math.h)
pow10    (math.h)              ultoa       (stdlib.h)

                     Подпрограммы памяти.

     Эти подпрограммы  обеспечивают динамическое распределение
памяти с большими и маленькими моделями данных.
allocmem         (dos.h)      farmalloc     (alloc.h)
brk              (alloc.h)    farrealloc    (alloc.h)
calloc           (alloc.h,    free          (alloc.h,
                  stdlib.h)                  stdlib.h)
coreleft         (alloc.h,    heapcheck     (alloc.h)
                  stdlib.h)   heapcheckfree (alloc.h)
farcalloc        (alloc.h)    heapchecknode (alloc.h)
farcoreleft      (alloc.h)    heapwalk      (alloc.h)
farfree          (alloc.h)    malloc        (alloc.h,
farheapcheck     (alloc.h)                   stdlib.h)
farheapcheckfree (alloc.h)    realloc       (alloc.h,
farheapchecknode (alloc.h)                   stdlib.h)
farheapfillfree  (alloc.h)    sbrk          (alloc.h)
farheapwalk      (alloc.h)    setblock      (dos.h)

                 Одновременные подпрограммы.

     Эти подпрограммы обеспечивают звуковые эффекты и т.д.
delay       (dos.h)        setjmp     (setjmp.h)
localeconv  (locale.h)     setlocale  (locale.h)
longjmp     (setjmp.h)     sound      (dos.h)
nosound     (dos.h)

              Подпрограммы управления процессом.

     Эти подпрограммы вызывают и завершают новые процессы  из-
нутри других процессов.
abort   (process.h)  execvp  (process.h)  spawnl   (process.h)
execl   (process.h)  execvpe (process.h)  spawnle  (process.h)
execle  (process.h)  _exit   (process.h)  spawnlp  (process.h)
execlp  (process.h)  exit    (process.h)  spawnlpe (process.h)
execlpe (process.h)  getpid  (process.h)  spawnv   (process.h)
execv   (process.h)  raise   (signal.h)   spawnve  (process.h)
execve  (process.h)  signal  (signal.h)   spawnvp  (process.h)
                                          spawnvpe (process.h)

                  Стандартные подпрограммы.

     Эти подпрограммы являются стандартными.
abort   (stdlib.h)    exit    (stdlib.h)    malloc  (stdlib.h)
abs     (stdlib.h)    fcvt    (stdlib.h)    putenv  (stdlib.h)
atexit  (stdlib.h)    free    (stdlib.h)    qsort   (stdlib.h)
atof    (stdlib.h)    gcvt    (stdlib.h)    rand    (stdlib.h)
atoi    (stdlib.h)    getenv  (stdlib.h)    realloc (stdlib.h)
atol    (stdlib.h)    itoa    (stdlib.h)    srand   (stdlib.h)
bsearch (stdlib.h)    labs    (stdlib.h)    strtod  (stdlib.h)
calloc  (stdlib.h)    lfind   (stdlib.h)    strtol  (stdlib.h)
ecvt    (stdlib.h)    lsearch (stdlib.h)    swab    (stdlib.h)
_exit   (stdlib.h)    ltoa    (stdlib.h)    system  (stdlib.h)

                 Подпрограммы текстовых окон.

     Эти подпрограммы выводят текст на экран.
clreol      (conio.h)        normvideo      (conio.h)
clrscr      (conio.h)        puttext        (conio.h)
delline     (conio.h)        setcursortype  (conio.h)
gettext     (conio.h)        textattr       (conio.h)
gettextinfo (conio.h)        textbackground (conio.h)
gotoxy      (conio.h)        textcolor      (conio.h)
highvideo   (conio.h)        textmode       (conio.h)
insline     (conio.h)        wherex         (conio.h)
lowvideo    (conio.h)        wherey         (conio.h)
movetext    (conio.h)        window         (conio.h)

                 Подпрограммы даты и времени.

     Это подпрограммы преобразования и манипуляции временем.
asctime   (time.h)        mktime    (time.h)
ctime     (time.h)        setdate   (dos.h)
difftime  (time.h)        settime   (dos.h)
dostounix (dos.h)         stime     (time.h)
ftime     (sys\timeb.h)   strftime  (time.h)
getdate   (dos.h)         time      (time.h)
gettime   (dos.h)         tzset     (time.h)
gmtime    (time.h)        unixtodos (dos.h)
localtime (time.h)

         Подпрограммы переменного списка аргументов.

     Эти подпрограммы используются для доступа  к  переменному
списку аргументов (например, с vprintf и т.д.).
       va_arg   (stdarg.h)
       va_end   (stdarg.h)
       va_start (stdarg.h)
