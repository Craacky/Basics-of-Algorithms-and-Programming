                           ГЛАВА 3

                ДЛЯ ПОЛЬЗОВАТЕЛЕЙ MICROSOFT C

     Если Вы являетесь опытным программистом на С или С++,  но
среда программирования Borland C++ является для Вас новой,  то
Вы должны прежде чем, что-нибудь делать, прочитать эту неболь-
шую главу. Мы предполагаем, что Вы хотите быстро освоить новую
часть программного обеспечения, и мы знаем, что Вы хотите зат-
ратить как можно меньше времени на чтение  этого  руководства.
Однако,  то время,  которое Вы затратите на чтение этой главы,
возможно сохранит в будующем для Вас значительно больше време-
ни. Пожалуйста, начинайте читать.

                       Среда и средства

     Borland C++  IDE  (интегрированная  среда развития) грубо
эквивалентна Programmer's Workbench,  хотя  мы,  естесственно,
думаем, что Вы обнаружите, что IDE намного легче для использо-
вания.  Глава 2 Руководства пользователя предоставляет  полный
справочник  по IDE.  Если Вы интересуетесь разработкой Windows
приложений, то обратитесь к главе 3 Руководства пользователя.
     Примечание. Более  подробную информацию о файлах конфигу-
рации и проекта можно найти в главах 1 и 4 Руководства пользо-
вателя.
     IDE загружает свои установочные параметры из двух файлов:
TCCONFIG.TC (определенный по умолчанию  файл  конфигурации)  и
файла проекта (.PRJ). TCCONFIG.TC содержит общую информацию по
среде.  Текущий файл проекта содержит информацию, более специ-
фическую для разрабатываемого приложения.
     Проект является  IDE эквивалентом makefile .  Он включает
список создаваемых файлов, а также установочных параметров для
IDE  опций,  которые  управляют  компиляцией и редактированием
программы.  Если Вы не задали файл проекта при запуске IDE, то
открывается проект без имени и устанавливаются определенные по
умолчанию опции компилятора и редактора связей,  а список имен
файлов будет отсутствовать.
     Однако, в отличие от Microsoft C,  Borland C++ не создает
автоматически  и  не  выполняет  makefile на основе значений и
имен файлов,  заданных в проекте.  Если Вы хотите использовать
IDE  для  формирования проекта,  а для фактического построения
используется MAKE,  то можно использовать утилиту PRJ2MAK  для
того, чтобы преобразовать файл проекта в makefile.
     Следующие разделы описывают значительные  различия  между
Borland C++ MAKE,  Project Manager, редактором связей (TLINK),
компилятором командной строки (BCC),  Microsoft C NMAKE LINK и
CL.

                        IDE и Windows

     Если Вы хотите использовать и Windows, и IDE, то загрузи-
те TKERNEL,  затем прогоните  Windows  в  стандартном  режиме.
Alt-ESC переключает две эти среды.
     Чтобы обеспечить нахождение проекта в правильном справоч-
нике,  вызовите  BCX  с .PIF файлом,  у которого поле Start-up
Directory задает требуемый справочник для проекта.  Если Вы не
используете .PIF файл, то новые проекты будут помещаться в оп-
ределенный по умолчанию Borland C++ справочник \BORLANDC\BIN.

                  Пути для .h и .LIB файлов

     Microsoft C работает с двумя  переменными  среды:  LIB  и
INCLUDE.  Редактор  связей Microsoft использует переменную LIB
для обнаружения местонахождения библиотек времени  выполнения;
аналогично,  INCLUDE  используется для нахождения файлов стан-
дартных зоголовков. Borland C++ не использует переменные среды
для  сохранения  пути  к библиотеке или include файла.  Вместо
этого можно легко задать эти пути в IDE,  используя опции сре-
ды.  Если Вы работаете с компилятором командной строки, редак-
тором связей или с Resource Compiler,  то  можно  использовать
опции командной строки или файлы конфигурации.
     Когда Вы инсталлируете Borland C++,  выдается  запрос  об
установке путей для include файлов и библиотечных файлов.  За-
тем эти пути становятся определенными по  умолчанию  путями  в
IDE.  Пути  для include файлов и библиотечных файлов также за-
писываются в определенный по умолчанию файл конфигурации  ком-
пилятора  командной  строки TURBOC.CFG.  Библиотечный путь за-
писывается в определенный по умолчанию файл конфигурации авто-
номного редактора связей TLINK.CFG.
     - В IDE можно изменить определенные по умолчанию пути по-
иска  для  библиотек  и  файлов  заголовков  с помощью команды
Options│Directories. Значения, установленные в диалоговом окне
Directories,  становиться частью текущего проекта.  Если Вы не
задаете при старте IDE проект, или открываете новый проект, то
IDE использует проект, определенный по умолчанию.
     - Для компилятора командной строки  можно  изменить  путь
поиска  include и библиотечных файлов с помощью опций -I и -L,
соответственно.  Эти опции также можно изменить в файле конфи-
гурации для компилятора командной строки, TURBO.CFG.
     - Для редактора связей TLINK или TLINKX  можно  использо-
вать опцию -L, чтобы изменить пути поиска для библиотек и кода
инициализации (например,  C0s.OBJ,  код запуска для модели не-
большого объема памяти). Например, эта опция
         /LC:\BORLANDC\LIB;C:\WINAPPS\LIB
сообщает редактору  связей  о  необходимости просматривать эти
два пути для файлов библиотеки и инициализации.
     Можно также создать файл TLINK.CFG. TLINK.CFG - это стан-
дартный текстовый файл, который содержит список действительных
TLINK опций.
     - Для Resource Compiler опция -x  означает  игнорирование
переменной  INCLUDE.  Кроме того,  можно задать дополнительный
путь поиска с помощью опции -i (-i сама по себе не  подразуме-
вает использование -x).
     Когда Resource Compiler вызывается из  командной  строки,
он просматривает windows.h на пути,  заданном переменной среды
INCLUDE,  если этот файл там есть. Если эта INCLUDE переменная
установлена на любой другой путь, на котором нет windows.h, то
Ваш модуль будет компилироваться неправильно. (Это не происхо-
дит  в  IDE,  потому  что  IDE  передает правильную информацию
Resource Compiler.)
     Например, если  Вы используете Microsoft C,  то возможно,
что переменная среды INCLUDE установлена на путь для Microsoft
С  файлов  заголовков.  Если  Вы  также  используете Microsoft
Windows SDK, тогда версия windows.h, включенная с SDK, вероят-
но, также будет находиться в INCLUDE справочнике.
     Когда Вы разрабатываете BORLAND  C++  приложение,Resource
Compiler  должен  включать windows.h,поставляемый BORLAND C++.
Если Вы определили переменную среды INCLUDE, то Вам нужно про-
читать  Resource Compiler,  чтобы проигнорировать ее с помощью
опции -x.

                             MAKE

     MAKE, поставляемая вместе с Borland C++, основана на UNIX
версии  MAKE и подобна новой Microsoft утилите NMAKE.  Однако,
утилита MAKE Microsoft С 5.1 имеет важные отличия  от  Borland
C++ MAKE.
     Основное отличие  между  Borland  C++   MAKE   и   старой
Microsoft MAKE состоит в том, что Microsoft MAKE обновляет все
указанные адресаты последовательно.  Borland C++ MAKE и  NMAKE
обновляют  только адресаты,  заданные в командной строке и все
адресаты,  которые встречаются в из списках отношений.  Если в
командной строке не задано ни одного адресата,  то обновляется
первый адресат, указанный в makefile.
     Можно легко  преобразовать  Microsoft  С  5.1  makefile в
Borland C++ MAKE или Microsoft NMAKE формат.  Если у Вас  есть
один адресат,  который зависит от всех других,  то можно пере-
местить эту зависимость на первое место.
     Другой способ  преобразования  старых  makefile состоит в
создании нового псевдоадресата в  качестве  первого  адресата,
кроме того,  первый адресат в makefile должен зависеть от всех
других адресатов.
     Например, если у Вас есть следующий makefile:
         file1.exe: file.obj
            $(LINK) ...

         file2.exe: file.obj
            $(LINK) ...
         mylib.lib
            $(LIB)
         file.obj: file.c file.h
            $(CC)
     Нужно добавить в качестве первого адресата:
         ALL: file1.exe file2.exe mylib.lib
     Microsoft С MAKE  (версия  5.1)  допускает  использование
нескольких  адресатов  с  одинаковым  именем в одном makefile.
Можно переписать эти правила в одно правило.  Переместите  за-
висимые файлы в список зависимостей первого правила, затем пе-
реместите команды в конец списка команд первого правила.
     Например, Microsoft С MAKE ,  будет  допускать  следующий
фрагмент makefile:
         whello.exe: whello.obj whello.def
            think /Tw /v /n /c C:\BORLANDC\LIB\c0wc whello,\
                  whello,\
                  ,\
                  C:\BORLANDC\LIB\cwins C:\BORLANDC\LIB\cs
         C:\BORLANDC\LIB\import,\
                  whello

         whello.exe: whello.res
            RC whello.res
     Однако, правила,  показанные в этом примере, не будут ра-
ботать с Borland C++ MAKE или Microsoft NMAKE.Их  можно  пере-
писать следующим образом:
         whello.exe: whello.obj whello.def whello.res
            think /Tw /v /n /c C:\BORLANDC\LIB\c0wc whello,\
                  whello,\
                  ,\
                  C:\BORLANDC\LIB\cwins C:\BORLANDC\LIB\cs
         C:\BORLANDC\LIB\import,\
                  whello
            rc whello.res
        Ниже приведен полный список MAKE опций командной стро-
ки. Заметим, что для Borland C++ регистр (строчная или заглав-
ная  буква) имеет значение;  опцию -d нельзя заменять -D.  Для
опций Microsoft NMAKE регистр не имеет значения.

     Таблица 3.1: Сравнение опций  MAKE и NMAKE
───────────────────────────────────────────────────────────────
Microsoft C 6.0 Borland C++
NMAKE опции     MAKE опции       Что делает
───────────────────────────────────────────────────────────────
/?              -? или -h     Выводит    на   экран    краткое
                              изложение синтаксиса NMAKE.
N/A             -a            Вызывает          автоматическую
                              проверку  зависимостей   по .OBJ
                              файлам.
/A              -B            Создает      все       адресаты,
                              независимо от дат файлов.
/C              N/A           Не  выводит  на печать сообщения
                              об     авторском      праве    и
                              нефатальные сообщения.
Ident="1"       -DIdent       Определяет именной идентификатор
                              для    строки,   состоящей    из
                              единственного символа 1(один).
Ident=String    -DIdent=      Определяет именной идентификатор
                 String       Ident   для   String. Строка  не
                              может    содержать   ни   одного
                              и символа табуляции.
/D              N/A           Выводит  на  печать   дату/время
                              файла при его проверке.
/E                            Замещает   определенные  макросы
                              переменными среды.
                              (Заметим,   что      Borland C++
                              не    используют      переменные
                              среды INCLUDE и LIB; Borland C++
                              замещает  переменные  среды   на
                              определенные макросы.)
/F filename     -filename     Использует   filename  как  MAKE
                              файл. Если     filename       не
                              существует    и   расширение  не
                              задано,   то        используется
                              FILENAME.MAK.
/HELP           (See -h)      В   Microsoft  NMAKE  эта  опция
                              вызывает   QuickHelp,  если  она
                              есть, или выводит экран  помощи.
/I              -i            Не    проверяет     (игнорирует)
                              состояние     выхода        всех
                              выполняемых программ. Продолжает
                              выполнение    независимо      от
                              состояния  выхода.
N/A             -Idirectory   Осуществляет    поиск    include
                              файлов  в  указанном справочнике
                              (а также в текущем справочнике).
N/A             -K            Сохраняет       ( не  стирает )
                              временные   файлы,   создаваемые
                              MAKE.  Все   временные     файлы
                              имеют   форму      MAKEnnnn.$$$,
                              где nnnn имеет  диапазон от 0000
                              до  9999.     Более    подробная
                              информация о  временных   файлах
                              содержится в главе 7 Руководства
                              пользователя.
/N              -n            Выводит    на   печать  команды,
                              но не выполняет их.  Это полезно
                              для отладки makefile.
/NOLOGO         N/A           Не   выводит   на  печать  NMAKE
                              заголовок входа в систему.
/P              N/A           Выводит        на         печать
                              макроопределения   и    описания
                              адресатов.
/Q              N/A           Возвращает    код    выхода   из
                              адресата (ноль,   если   адресат
                              является текущим;  не ноль, если
                              адресат    представляет    собой
                              устаревшую версию);  полезна для
                              вызова командного файла из NMAKE
/R              N/A           Игнорирует TOOLS.INI.
N/A             -S            Выгружает   MAKE  из  памяти  во
                              время выполнения   команд.   Это
                              значительно сокращает    память,
                              затрачиваемую MAKE,     разрешая
                              компилировать очень      большие
                              модули.
/S              -s            Не  выводит  на  печать  команды
                              перед их   выполнением.   Обычно
                              MAKE выводит  на  печать  каждую
                              команду перед   тем,   как   она
                              начнет выполняться.
N/A             -Uidentifier  Отменяет  любые предыдущие
                              определения           указанного
                              идентификатора.
N/A             -W            Записывает   текущие    заданные
                              нестроковые опции (например,  -s
                              и -a) в MAKE.EXE (это делает  их
                              определенными по умолчанию).
/T              N/A           Изменяет    дату     модификации
                              устаревших файлов   на   текущую
                              дату (для       Borland      C++
                              используйте утилиту TOUCH).
/X FileName     N/A           Посылает   ошибочный   вывод  в
                              FileName (файл или  устройство).
                              Если Вы  введете вместо FileName
                              тире, то       вывод       будет
                              направляться в стандартный вывод.
/Z              N/A           Внутренняя        опция      для
                              Programmer's Workbench.
───────────────────────────────────────────────────────────────
     Следующая таблица  сравнивает  NMAKE  и  Borland C++ MAKE
предварительно определенные макросы, псевдоадресаты и директи-
вы.

     Таблица 3.2:  MAKE  и  NMAKE  предварительно определенные
                  макросы и директивы
───────────────────────────────────────────────────────────────
Microsoft C   Borland C++
NMAKE         MAKE              Что   делает
───────────────────────────────────────────────────────────────
N/A             $d(Macro)      Определяет   тестовый    макрос.
                               Расширяет до   1,   если   Macro
                               определено, и    до    нуля    в
                               противном случае.   См.   !IFDEF
                               директиву ниже в этой таблице.
N/A             $:             Путь только для макроса.
$@              $.             Макрос полного  имени файла, нет
                               пути.
$*              $&             Макрос базового имени файла, нет
                               пути.
N/A             $*             Макрос  базового  имени  файла с
                               указанием пути.
$**             N/A            Список всех зависимых файлов.
$<              $<             Макрос   полного  имени  файла с
                               указанием пути.
$$@             N/A            Адресат,  который  оценивается в
                               данный момент      (используется
                               только в списках зависимостей).
$(CC)           N/A            Команда  для  вызова компилятора
                               командной   строки.        NMAKE
                               предварительно  определяет  этот
                               макрос как CL .
$(AS)           N/A            Команда  для  вызова ассемблера.
                               NMAKE предварительно  определяет
                               этот макрос как AS.
$(MAKE)         N/A            Команда для вызова NMAKE.
                               Используется для    рекурсивного
                               вызова NMAKE.
$(MAKEDIR)      N/A            Справочник,     из      которого
                               вызывается NMAKE.
$(MAKEFLAGS)    N/A            NMAKE   опции,  действующие    в
                               данный момент.
!IF expression !if expression  Условное     выполнение.    Если
                               expression имеет  значение true,
                               то строки,     следующие      за
                               expression выполняются,  пока не
                               встретятся !else,   !elif(только
                               Borland C++) или !endif.
!ELSE           !else          Условное     выполнение.    Если
                               предыдущее !if expression  имеет
                               значение false,    то    строки,
                               следующие за !else,  выполняются
                               пока не               встретится
                               !elif(только Borland  C++)   или
                               !endif.
N/A             !elif          Вложенное условное выполнение.
!ENDIF          !endif         Завершает   условное  выполнение
                               !if блока. Для Microsoft С также
                               завершает !IFDEF    и    !IFNDEF
                               блоки.
!IFDEF Macro    N/A            Условное    выполнение.     Если
                               Macro определено, то выполняются
                               строки, следующие  за  !IFDEF до
                               тех пор,  пока   не   встретятся
                               !ELSE или !ENDIF.  См. $d(Macro)
                               предварительно      определенный
                               макрос, который         является
                               эквивалентом в Borland C++.
!IFNDEF Macro   N/A            Условное выполнение. Если  Macro
                               не определено,   то  выполняются
                               строки, следующие за !IFNDEF  до
                               тех пор,   пока   не  встретится
                               !ELSE или !ENDIF.  См. $d(Macro)
                               предварительно      определенный
                               макрос, который         является
                               эквивалентом в Borland C++ MAKE.
!UNDEF Macro    !undef Macro   Вызывает отмену определения для
                               заданного макроса.
!ERROR Text     !error Text    Вызывает прекращение выполнения
                               MAKE и    выводит    на   печать
                               сообщение об ошибке.
!UNCLUDE file-  !include file- Определяет, что  файл   filename
 name            name          будет  включен  в makefile. Если
                               используется форма   <filename>,
                               то Microsoft NMAKE ищет filename
                               в справочниках,         заданных
                               переменной среды INCLUDE.  Чтобы
                               получить тот   же   эффект   для
                               Borland C++   MAKE,  используйте
                               опцию -l.
!CMDSWITCHES    N/A            Включает или выключает следующие
                               NMAKE опции:    /I(игнорирование
                               кода возврата),    /D(вывод   на
                               печать даты/времени),   /N(вывод
                               на печать    команд    без    их
                               выполнения) или        /S(отмена
                               печати). Для     Borland     C++
                               используйте .ignore, .silent или
                               .nosilent. (Это  не эквивалентно
                               NMAKE /I.)
.IGNORE:        .ignore        Игнорирует             значение,
                               возвращаемое командами.
N/A             .noignore      Выключает .ignore.
N/A             .autodepend    Включает          автоматическую
                               проверку  зависимостей.
N/A             .noautodepend  Выключает         автоматическую
                               проверку зависимостей.
.SILENT         .silent        Не  выводит  на  печать  команды
                               перед из выполнением.
N/A             .nosilent      Заставляет   MAKE   выводить  на
                               печать команды      перед     их
                               выполнением.
N/A             .swap          Заставляет  MAKE  загружать  или
                               выгружать себя из памяти.
N/A             .noswap        Отменяет  загрузку  и   выгрузку
                               MAKE из памяти.
N/A             .path.ext      Передает  MAKE  путь  для поиска
                               файлов с расширением .ext.
.SUFFIXES: Ext-  N/A           Если для адресата не перечислены
 List                          зависимости, то NMAKE использует
                               файлы с            расширениями,
                               перечисленными в ExtList.
.PRECIOUS: Tar-  N/A           Заставляет   NMAKE     сохранять
 gets                          заданные    адресаты    Targets,
                               даже если программное построение
                               адресата прерывается.
───────────────────────────────────────────────────────────────

                 Компилятор командной строки

     В следующей таблице перечислены сравнимые опции  компиля-
торов командной строки BCC и CL.  Перечислены некоторые из оп-
ций автономного препроцессора CPP . В большинстве многопроход-
ных  компиляторах  отдельный  проход  выполняет работу препро-
цессора,  и можно просмотреть результаты одного  прохода.  Так
как  Borland C++ использует интегрированный однопроходной ком-
пилятор, мы предоставляем автономную утилиту CPP для обеспече-
ния  функциональности  первого прохода,  которая есть в других
компиляторах.
     Заметим, что большинство опций CL, имеющих аргументы, до-
пускают наличие пробела между опцией и аргументом.  За BCC оп-
циями,  имеющими аргументы,  обычно сразу следует аргумент или
список аргументов.

Таблица 3.3: Сравнение CL и BCC опций
───────────────────────────────────────────────────────────────
Microsoft C     Borland C++
CL опции        BCC опции       Что делает
───────────────────────────────────────────────────────────────
N/A             @filename     Задает    компилятору   командной
                              строки имя файла.
N/A             +filename     Сообщает  компилятору   командной
                              строки     о        необходимости
                              использовать альтернативный  файл
                              конфигурации filename.
N/A             -AK           Использование   только   ключевых
                              слов Кернигана и Ричи.
N/A             -AU           Использование   только       UNIX
                              ключевых слов.
(See/Zpn)       -a            Выравнивание по границе слова.
(See/Zpn)       -a-           Выравнивание по границе байта( по
                              умолчанию).
/Aw/Gw          -WD           Создает   .OBJ     для   Windows,
                              которые   будут   редактироваться
                              как .DLL со всеми экспортируемыми
                              функциями.
/Aw/Gw          -WDE          Создает   .OBJ      для  Windows,
                              которые   будут   редактироваться
                              как .DLL с явно   экспортируемыми
                              функциями.
/Ax             -mx           Использование модели памяти x.Для
                              BCC эта опция,следующая за   t, s
                              или m с !  сообщает   компилятору
                              о необходимости считать DS != SS.
/Bn             N/A           Использование     альтернативного
                              препроцессора CnL.
N/A             -B            Компилирует и вызывает  ассемблер
                              для обработки  встроенного   кода
                              на ассемблере.
N/A             -b            Делает размер перечислений,равным
                              слову, по умолчанию.
N/A             -b-           Делает перечисления со знаком или
                              без знака.
/C              -C            Допускает вложенные комментарии.
/c              -c            Компилирует   в  .OBJ,  но     не
                              редактирует.
/Did            -Dname        Определяет  имя  name для  строки
,                                  состоящей из нулевого символа.
/Did=value      -Dname=string Определяет имя name для строки.
N/A             -d            Включает   слияние    дублируемых
                              строк.
N/A             -d-           Выключает  слияние    дублируемых
                              строк(по умолчанию).
N/A             -Efilename    Использует   filename   так,  как
                              использует ассемблер.
/E              CPP -P        Предварительно       обрабатывает
                              исходный текст   на   стандартный
                              вывод, включая номера строк.
/EP             CPP -P-       Предварительно       обрабатывает
                              исходный текст   на   стандартный
                              вывод без номеров строк.
N/A             -f-           Не делает плавающую точку.
N/A             -ff           Быстрая   плавающая   точка  ( по
                              умолчанию).
N/A             -ff-          Строгая  ANSI   плавающая  точка.
N/A             -f87          Использует инструкции
                              аппаратного    обеспечения  8087.
N/A             -f287         Использует инструкции аппаратного
                              обеспечения 80287.
/F hexnum                     Устанавливает    размер    стека,
                              равным hexnum    байтам   (hexnum
                              должно быть шестнадцатиричным).
(по умолчанию)  -Fс           Генерирует COMDEF.
N/A             -Fm           Дает    возможность  использовать
                              опции -Fc, -Ff и -Fs.
(по умолчанию)  -Fs           Делает  DS = SS  для всех моделей
                              памяти.
/Fa[listfile]   N/A           Создает   листинг     ассемблера.
                              Имя для файла списка по умолчанию
                              -Source.EXT.
/Fbbound-exe                  Создает  граничный (bound)
                              выполнимый файл.
/Fc[listfile]   -s            Создает  комбинированный  листинг
                              исходного кода  и   ассемблерного
                              кода. Название  для  файла списка
                              по умолчанию -Source.COD.
/Fe exefile     -eexefile     Именует  выполнимые  файлы,   как
                              exefile.
/Fl[listfile]   N/A           Создает  список  объектного кода.
                              Название для   файла   списка  по
                              умолчанию Source.COD.
/Fm[mapfile]    -M            Создает   файл   отображения.  По
                              умолчанию его  имя   -Source.MAP,
                              где source     является    первым
                              заданным исходным файлом.
/Fo objfile     -o objfile    Именует   объектные   файлы   как
                              objfile.
/FPa            N/A           Генерирует    вызовы    плавающей
                              точки; выбирает    альтернативную
                              математическую библиотеку.
/FPc            -f            Эмулирует  плавающую   точку (для
                              Borland C++     по    умолчанию);
                              используется копроцессор,если  он
                              есть во время выполнения.
/FPc87          N/A           Выбирает библиотеку  80x87 (80x87
                              копроцессор должен быть в наличии
                              во время выполнения).
/FPi            N/A           Подключает   80x87    инструкции;
                              выбирает библиотеку     эмулятора
                              (используется копроцессор,   если
                              он есть во время выполнения).
/FPi87          -f87 или      Подключает   80x87    инструкции;
                -f287         выбирает библиотеку копроцессора
                              (копроцессор должен     быть    в
                              наличии во время выполнения).
/Fr[browsefile] N/A           Генерирует   стандартную      PWB
                              Source Browser базу данных.
/FR[browsefile] N/A           Генерирует    расширенную     PWB
                              Source Browser базу данных.
/Fs[listfile]   N/A           Cоздает  файл  исходного  списка.
                              Имя файла   исходного  списка  по
                              умолчанию -Source.LST.
/Fx[xreffile]   N/A           xreffile  задает  имя  для   MASM
                              файла перекрестных ссылок.
G0              -1            Генерирует 80186 инструкции.
G1              -1-           Генерирует 8088/8086 инструкции.
G2              -2            Генерирует 80286 совместимые
                              инструкции защищенного режима.
N/A             -G            Оптимизирует    для    увеличения
                              скорости.
N/A             -G-           Оптимизирует      размер      (по
                              умолчанию).
/Gc             -p            Использует соглашения о  вызовах
                              Паскаля. Для CL используются или
                              соглашения Паскаля  или Фортрана,
                              которые в данный момент являются
                              одинаковыми.

/Gd             -p-           Стандартные  соглашения о вызовах
                              C (по умолчанию).
/Ge             -N            Проверка  переполнения  стека (по
                              умолчанию для CL, но не для BCC).

/Gi             N/A           Пошаговая         компиляция (для
                              использования с   опцией  быстрой
                              компиляции /qc).
/Gm             N/A           Запоминает    строки  в  сегменте
                              CONST.
/Gr             N/A           Включает  _fastcall  для   вызова
                              соглашений для   функций    (если
                              возможно, значение  передается  в
                              регистрах).
/Gs             -N-           Выключает  проверку  переполнения
                              стека (по умолчанию эта  проверка
                              отключена для BCC).
/Gt[number]     -Ff[=size]    Создает  автоматически  удаленные
                              переменные. size    или    number
                              являются пороговыми величинами.
/Gw             -W            Создает  правильный пролог/эпилог
                              для Windows программ (для Borland
                              C++ это   создает   программу  со
                              всеми экспортируемыми функциями).
/GW             -WE           Генерирует   пролог/эпилог    для
                              явных функций (помеченных _export
                              в Windows программе.)
N/A             -H            Сообщает            компилятору о
                              необходимости генерации         и
                              использованию      предварительно
                              откомпилированных заголовков.
N/A             -H-           Выключает       генерацию       и
                              использование      предварительно
                              откомпилированных заголовков  (по
                              умолчанию).
N/A             -Hu           Сообщает        компилятору     о
                              необходимости использования   без
                              генерации          предварительно
                              откомпилированных заголовков.
N/A             -H=filename   Задает     имя     файла      для
                              предварительно  откомпилированных
                              заголовков.
по умолчанию    -h            Использует    быстрый    огромный
                              арифметический указатель.
/H number       -inumber      Ограничивает  длину  внешних имен
                              значение number.
/HELP           BCC           Вызывает   QuickHelp . Для помощи
                              по BCC  просто   вызывается   без
                              опций.
N/A             -in           Делает     длину        значащего
                              идентификатора равной n.
/I directory    -lpath        Справочники  для  include файлов.
                              Для CL добавляет directory начала
                              списка справочников  для   поиска
                              include файлов. См. выше.
N/A             -jn           Ошибки:    остановка    после   n
                              сообщений.
/J              -K            Изменяет  для  char. определенное
                              по умолчанию значение "со знаком"
                              на "без знака".  Для Borland  C++
                              -K- возвращает    значение    "со
                              знаком".
N/A             -k            Включает  стандартный фрейм стека
                              (по умолчанию).
N/A             -Lpath        Справочники для библиотек.
/Lc и /Lr        /Td          Сообщает    редактору    связей о
                              создании действительного   режима
                              для выполнения.
/Li[number]     N/A           Использует   пошаговый   редактор
                              связей вместо        стандартного
                              редактора. Number      определяет
                              байтовую границу   для заполнения
                              ближних функций.
/Lp             N/A           Создает    защищенный  режим  для
                              выполнения (OS/2).
/Lr                           См. /Lc.
/link options   -loptions     Передает    options      редактору
                              связей при его вызове.
N/A             -l-option     Отменяет   опцию     option    для
                              редактора связей.
N/A             -M            Сообщает     редактору    связей о
                              необходимости создания файла
                              отображения.
/MAoption       -Toption      Передает    ассемблеру     при его
                              вызове.
/MD             N/A           Создает DLL для OS/2.
/ML             N/A           Статистически            связывает
                              библиотеку с DLL (OS/2).
/MT             N/A           Обеспечивает    поддержку      для
                              многопоточных программ в OS/2.
N/A             -npath        Задает выходной справочник.
/NDdataseg      -zRname       Задает имя  сегмента  данных. Для
                              BCC эта    опция   изменяет   имя
                              сегмента     неинициализированных
                              данных на   name.   По  умолчанию
                              сегменты     неинициализированных
                              данных относятся к классу BSS.
/NMmodule       N/A           Задает  module  в  качестве имени
                              модуля.
/nologo         N/A           Не  выводит  на  печать заголовок
                              пароля при   входе  в  диалоговую
                              систему.
/NTsegname      -zCname       Задает  имя  сегмента  кода.  Эта
                              опция изменяет имя сегмента  кода
                              на name.  По  умолчанию,  сегмент
                              кода называется     _TEXT,     за
                              исключением средних,   больших  и
                              огромных моделей,   где   сегмент
                              кода имеет    имя   filename_TEXT
                              (filename здесь   -    это    имя
                              исходного файла).
N/A             -O            Оптимизирует переходы.
N/A             -O-           Нет оптимизации (по умолчанию).
/O[options]     (см.          Обеспечивает   оптимизацию.   Для
                 комментарий) Borland C++ см. специальные
                              опции, например, -Z, -O или -G.
N/A             -P            Выполняет компиляцию С++
                              независимо от          расширения
                              исходного файла.
N/A             -Pext         Выполняет компиляцию С++ и
                              задает ext       в       качестве
                              определенного по        умолчанию
                              расширения.
N/A             -P-           Выполняет   компиляцию  С++ или С
                              в зависимости    от    расширения
                              исходного файла (по умолчанию).
N/A             -P-ext        Выполняет  компиляцию  С++  или С
                              в зависимости   от    расширения;
                              задает ext       в       качестве
                              определенного по        умолчанию
                              расширения.
N/A             -p-           Использует  соглашения  о вызовах
                              С (по умолчанию).
/P              CPP-ofile-    Предварительно       обрабатывает
                name          исходный  файл  и  посылает вывод
                              в  filename ( CPP) или в Source.I
                              (CL).
N/A             -Qe           Сообщает        компилятору     о
                              необходимости использовать    всю
                              имеющуюся EMS      память     (по
                              умолчанию).
N/A             -Qe-          Сообщает   компилятору о том, что
                              нельзя использовать  никакой  EMS
                              памяти.
N/A             -Qx           Сообщает        компилятору     о
                              необходимости использовать    всю
                              доступную расширенную память.
N/A             -Qx=nnnn      Сообщает      компилятору       о
                              необходимости резервировать  nnnn
                              килобайт расширенной  памяти  для
                              других программ,   а   оставшуюся
                              память использовать самому.
N/A             -Qx=nnnn,     Сообщает        компилятору     о
                 yyyy         необходимости резервировать nnnn
                              килобайт расширенной  памяти  для
                              других программ, а yyyy килобайт
                              для себя.
N/A             -Qx=,yyyy     Сообщает       компилятору      о
                              необходимости зарезервировать
                              yyyy килобайт расширенной  памяти
                              для себя.
N/A             -Qx-          Сообщает     компилятору о   том,
                              что нельзя  использовать  никакой
                              расширенной памяти.
N/A             -r            Использует  включение регистровых
                              переменных (по умолчанию).
N/A             -r-           Отменяет            использование
                              регистровых переменных.
N/A             -rd           Разрешает  хранить в    регистрах
                              только объявленные    регистровые
                              переменные.
/qc             N/A           Вызывает быструю компиляцию.
/Sx option      N/A           Задает  опции  для      исходного
                              листинга. Где x - l,p,s или t.
N/A             -T-           Удаляет   все   предыдущие  опции
                              ассемблера.
/Ta asm_srcfile N/A           Определяет, что asm_srcfile будет
                              обрабатываться как исходный  файл
                              на ассемблере.
/Tc c-srcfile   N/A           Определяет, что c-srcfile   будет
                              обрабатываться, как исходный файл
                              на С.
N/A             -u            Генерирует      подчеркивания (по
                              умолчанию).
N/A             -u-           Отменяет подчеркивания.
/u              N/A           Отменяет    определение      всех
                              предварительно       определенных
                              идентификаторов.
/U Ident        -UIdent       Отменяет   любое       предыдущее
                              определение Ident.
N/A             -V            Интеллектуальные  С++ виртуальные
                              таблицы.
N/A             -Vs           Локальные    С++      виртуальные
                              таблицы.
N/A             -V0,V1        Внешние  и  общие С++ виртуальные
                              таблицы.
N/A             -Vf           Удаленные   С++       виртуальные
                              таблицы.
N/A             -vi,-vi-      Управляет расширением  встроенных
                              функций.
/V string       N/A           Копирует  string в объектный файл
                              (для управления версией).
N/A             -w            Выводит на экран предупреждения.
N/A             -wxxx         Разрешает         предупреждающее
                              сообщение xxx.
N/A             -w-xxx        Отменяет          предупреждающее
                              сообщение xxx.
/w              -w-           Отменяет     вывод    на    экран
                              предупреждений.
N/A             -WS           Создает .OBJ для Windows, который
                              использует     "интеллектуальные"
                              возвращаемые вызовы.
/W n            (См.-w)       Задает   уровень   предупреждения
                              0, 1, 2, 3 или 4.
/WX             -g1           Делает    все      предупреждения
                              фатальными. Объектные  файлы   не
                              генерируются, если    встречается
                              предупреждения (опция          -g
                              принимает форму   -gn   ,  где  n
                              является предельным     значением
                              количества предупреждений).
N/A             -X            Отменяет           автоматическую
                              зависимость вывода компилятора.
/X              N/A           Игнорирует   INCLUDE   переменную
                              среды для  списка  путей   поиска
                              include файлов.
N/A             -Y            Разрешает  генерацию  оверлейного
                              кода.
N/A             -Yo           Делает оверлеи для компилируемых
                              файлов.
N/A             -Z            Разрешает          использование
                              регистров для оптимизации.
N/A             -zAname       Класс кода.
N/A             -zBname       BSS класс.
N/A             -zDname       BSS сегмент.
N/A             -zEname       Удаленный сегмент.
N/A             -zFname       Удаленный класс.
N/A             -zGname       BSS группа.
N/A             -zHname       Удаленная группа.
N/A             -zPname       Группа кода.
N/A             -zSname       Группа данных.
N/A             -zTname       Класс данных.
N/A             -zX*          Использует     определенное    по
                              умолчанию имя   сегмента,  класса
                              или группы для X.
/Za             -A            Заставляет           обеспечивать
                              совместимость с ANSI. Используйте
                              только ключевые слова    ANSI. Не
                              разрешается          использовать
                              специфические          расширения
                              разработчика.
/Zc             N/A           Игнорирует   регистр для функций,
                              объявленных как          _pascal.
/Zd             /y            Генерирует   номера   строк  для
                              символьного отладчика.
/Ze             -A-,-AT       Разрешает            использовать
                              специфические          расширения
                              разработчика.
/Zg             N/A           Генерирует   прототипы   функций;
                              записывает в стандартный вывод.
/Zi             /V            Для Microsoft генерирует
                              отладочную информацию         для
                              CodeView. Для     Borland     C++
                              генерирует информацию         для
                              отладчика IDE и Turbo Debugger.
/Zl             N/A           Записи библиотечного поиска  не
                              помещаются в объектный файл.
/Zpn            (См.-a,-a-)   Упаковывает элементы структуры  в
                              границе из n байтов. n может быть
                              равно 1, 2 или 4.
/Zr             N/A           Генерирует   проверки   нулевых и
                              удаленных указателей,     которые
                              находятся вне         допустимого
                              диапазона.
/Zs sourcefiles N/A           Проверяет только синтаксис.
───────────────────────────────────────────────────────────────

       Совместимость опций командной строки и библиотек

     С0Fx.OBJ модули  предоставляются  для   совместимости   с
исходными  файлами,  предназначенными  для компиляторов других
разработчиков.  C0Fx.OBJ модули заменяются C0Fx.OBJ  модулями;
они  должны редактироваться только с DOS приложениями,  а не с
Windows или DLL приложениями. Эти модули инициализации записы-
ваются  для  изменения модели памяти так,  чтобы сегмент стека
был внутри сегмента данных.  Соответствующий  C0Fx.OBJ  модуль
будет  использоваться  автоматически,  если Вы используете или
-Fs, или -Fm опции компилятора командной строки.
     -Fс (генерирует COMDEF),  -Ff (создает удаленные перемен-
ные),  -Fs (предполагает,  что DS = SS во всех моделях) и  -Fm
(разрешает  все  -Fx опции) опции компилятора командной строки
предоставляются  для  обеспечения  совместимости.  Эти   опции
описываются полностью в главе 6 Руководства пользователя.

                       Редактор связей

     Borland C++ редактор связей, TLINK, автоматически вызыва-
ется из компилятора командной строки, если не используется оп-
ция компилятора -с. Опции, например, модель памяти или адресат
(Windows или DOS),  передаются из компилятора в  TLINK;  TLINK
связывает  соответствующие  библиотеки  в зависимости от опций
компилятора.
     TLINK может   использоваться  для  построения  и  DOS,  и
Windows программ.  Материал по предложениям модульного опреде-
ления файла содержится в главе 7 Руководства пользователя.
     Следующая таблица сравнивает опции TLINK и LINK. Заметим,
что Borland C++ TLINK опции являются чувствительными к регист-
ру, а Microsoft TLINK - нет.

Таблица3.4: Сравнение опций LINK и TLINK.
───────────────────────────────────────────────────────────────
Microsoft C     Borland C++
Link опции      TLINK опции       Что делает
───────────────────────────────────────────────────────────────
N/A             /3           Разрешает   32-битовую обработку.
/A:size         /A=nnnn      Задает выравнивание сегментов для
                             NewExe (Windows) изображений.
/BA             N/A          BATCH.  подавляет  подсказки   для
                             не найденных    библиотечных   или
                             объектных файлов.
N/A             /C           Обрабатывает   EXPORTS  и  IMPORTS
                             разделы модульного     определения
                             файла с учетом регистра.
/CO             /v           Включает    полную      символьную
                             отладочную информацию.
/CP:bytes       N/A          Задает   максимальное   размещение
                             памяти программы, равным bytes.
N/A             /d           Предупреждает,      есть   ли    в
                             библиотеках дублируются символы.
/DOSSEG        (См.          Для    ассемблерных       программ
               комментарий)  заставляет            использовать
                             определенный порядок  сегментов  в
                             выполнимых файлах. Чтобы разрешить
                             использовать DOSSEG            для
                             ассемблерной программы,   включите
                             DOSSEG в исходный код.
/DS             N/A          Для ассемблерных программ сообщает
                             редактору связей  о  необходимости
                             загрузить данные,     начиная    с
                             верхнего конца DS  вместо  нижнего
                             конца.
/E              N/A          Упаковывает    выполнимые    файлы
                             посредством удаления повторяющихся
                             групп байтов.
/F              По умолчанию Для   LINK   сообщает    редактору
                             связей о             необходимости
                             оптимизировать удаленные    вызовы
                             процедур в том  же  сегменте,  где
                             находится вызывающая    процедура.
                             (Используется с        MS/PACKCODE
                             опцией). Для    TLINK    удаленные
                             вызовы              оптимизируются
                             автоматически.
/HE             /?           Предоставляет   помощь  по  опциям
                             командной строки.
/HI             N/A          Для   ассемблерных      программ в
                             действительном режиме     помещает
                             выполнимый файл   так   высоко   в
                             памяти, насколько это возможно.
N/A             /i           Инициализирует все сегменты.
/INC            N/A          Подготавливает  для ILINK.
/INF            N/A          Сообщает    LINK о   необходимости
                             выводить на   дисплей   информацию
                             редактора в ходе редактирования.
N/A             /Lpaths      Определяет пути поиска библиотек.
/LI             /l           Включает    номера строк исходного
                             текста и связанные с ними адреса в
                             файл отображения.
/M              /m           Создает     файл     отображения с
                             общими  глобальными символами.
/NOD[:filename] /n           Не использует    определенных   по
                             умолчанию библиотек.
/NOE            /e           Игнорирует   Extended   Dictionary
                             (расширенный словарь).
/NOF            N/A          Выключает    трансляцию  удаленных
                             вызовов (см. LINK/F опцию).
/NOI            /c           Учитывает регистр для символов.
/NOL            N/A          Заставляет    LINK       подавлять
                             заголовок.
/NON            N/A          Организует   сегменты в выполнимых
                             файлах в том же порядке, в котором
                             они были организованы /DOSSEG.
/NOP            /P-          Выключает упаковку кода.
N/A             /o           Делает   оверлеи   для модулей или
                             библиотек, следующих   за  опцией.
                             Microsoft LINK  использует  скобки
                             вокруг файлов, для которых   нужно
                             использовать оверлей.    (Заметим,
                             что схема  оверлеев  различна  для
                             разных программных продуктов).
/O:number       N/A          Задает   прерывания   number   для
                             передачи управления       оверлеям
                             (отличное от     определенного  по
                             умолчанию и равного 63).
/PACKC[:number] /P=n         Упаковывает сегменты кода.  number
                             или n задают  максимальный  размер
                             групп, образованных /PACKC или /P.
/PACKD[:number] N/A          Упаковывает   сегменты     данных.
                             number задает максимальный  размер
                             групп, образованных /PACKD.
/PADC:padsize   N/A          Сообщает    LINK о   необходимости
                             дополнять модуль кода для ILINK.
/PADD:padsize   N/A          Сообщает   LINK о    необходимости
                             дополнять сегменты данных  padsize
                             байтами.
/PAU            N/A          Делает паузу в редактировании.
/PM:type        N/A          Устанавливает      тип        окна
                             Presentation Manager.
/Q              N/A          Создает Quick библиотеку.
N/A             /s           Создает   детальное    отображение
                             сегментов.
/SE:number      N/A          Устанавливает         максимальное
                             количество допустимых сегментов.
/ST:number      N/A          Устанавливает размер стека.
/T              /t           Создает .COM файлы.
N/A             /Td          Создает   целевой  DOS  выполнимый
                             файл.
N/A             /Tdc         Создает целевой DOS.COM файл.
N/A             /Tde         Создает целевой DOS.EXE файл.
N/A             /Tw          Создает    целевой         Windows
                             выполнимый файл (.DLL или.EXE).
N/A             /Twe         Создает       целевое      Windows
                             приложение (.EXE)
N/A             /Twd         Создает     целевой   Windows  DLL
                             (.DLL).
/W              N/A          Предупреждает о настройках.
N/A             /x           Не создает файла отображения.
N/A             /ye          Использует     expanded     память
                             свопинга.
N/A             /yx          Использует     extended     память
                             свопинга.
───────────────────────────────────────────────────────────────

            Совместимость на уровне исходного кода

     Следующие разделы описывают, как убедиться в том, что Ваш
код совместим с Borland C++ компилятором и редактором связей.

                               __MSC

     Если библиотечная функция есть и в Microsoft, и в Borland
C++ библиотеках, но имеет различные имена или немного отличаю-
щееся написание, то Borland C++ будет заменять Microsoft функ-
цию на эквивалентную Borland C++ функцию.  Borland  C++  будет
делать  это,  если только определено __MSC.  Для совместимости
определите __MSC перед включением любого  файла  заголовков  в
любой исходный файл.

                       Файл заголовков

     Некоторые нестандартные файлы заголовков могут быть вклю-
чены с одним из двух имен, приведенных ниже.
─────────────────────────────────────────────────────────────
          Первоначальное имя         Псевдоним
─────────────────────────────────────────────────────────────
         alloc.h                     malloc.h
         dir.h                       direct.h
         mem.h                       memory.h
         varargs.h                   (новый для этой версии)
         search.h                    (новый для этой версии)
─────────────────────────────────────────────────────────────
     Если Вы определяете  данные файлов  заголовков  в  Вашей
программе, то Вы должны использовать опцию компилятора команд-
ной строки -Fc,  чтобы генерировать COMDEFs.  В противном слу-
чае, Вы будете получать ошибки редактора связей. Глава 6 Руко-
водства пользователя предоставляет полную ссылку на опции ком-
пилятора командной строки.

                        Модели памяти

     Хотя одинаковые  имена используются для шести стандартных
моделей памяти,  существует достаточно  значительное  различие
для больших моделей данных в стандартной конфигурации.
     В Microsoft С  все  большие  модели  данных  (компактная,
большая  и огромная) имеют определенный по умолчанию NEAR сег-
мент данных, для которого поддерживается DS. Данные помещаются
в этот сегмент данных, если размер данных оказывается ниже оп-
ределенного порога или иначе в удаленном сегменте данных. Мож-
но  установить пороговое значение с помощью опции -Gtn,  где n
является значением байтов.  По  умолчанию  пороговое  значение
равно 32,767. Если -Gt задано, а n не указано, то по умолчанию
будет использоваться значение 256.
     Во всех других моделях памяти,  используемых Microsoft С,
поддерживаются и ближняя, и дальняя "куча".
     В Borland  C++  большая и компактная модели (но не огром-
ная) имеют определенный по умолчанию NEAR сегмент данных,  для
которого поддерживается DS. Все статистические данные размеща-
ются в данном сегменте по умолчанию,  ограничивая общий  объем
статистических  данных  в программе 64К,  но делая все внешние
ссылки на данные ближними.  В огромной модели все данные явля-
ются удаленными.
     В Microsoft версии огромной модели памяти, поддерживается
определенный  по  умолчанию сегмент данных для всей программы,
который ограничивает общий объем ближних данных 64К. На разме-
ры массивов ограничение не накладывается,  так как все внешние
массивы обрабатываются как огромные (_huge).
     В Borland  C++ огромной модели памяти каждый модуль имеет
свой сегмент данных.  Сегмент данных загружается при  входе  в
функцию.  На все данные,  определенные в модуле, ссылаются как
на ближние данные,  а все внешние ссылки  на  данные  являются
удаленными.  Огромная модель ограничена 64К для ближних данных
в каждом модуле.

                        Ключевые слова

     Borland C++ поддерживает  одинаковое  множество  ключевых
слов с Microsoft С 5.1, за исключением слова fortran.
     Borland C++  поддерживает  такое  же  множество  ключевых
слов, как и Microsoft С 6.0, за исключением следующих слов:
     - _based, _self, _segname, так как Borland C++ не поддер-
живает базовые указатели
     - _segment;  Borland C++ ключевое слово _seg эквивалентно
_segment
     - _fastcall,  оптимизация, для которой нет непосредствен-
ного эквивалента
     - _emit; Borland C++ использует псевдофункцию __emit__(),
потому что этот стиль позволяет передавать адреса переменных в
качестве аргументов и позволяет выводить несколько  байтов;  а
_emit работает подобно DB в ассемблере,  разрешая выводить не-
посредственно 1 байт
     - _fortran;  используется вместо этого _pascal соглашения
о вызовах
     Borland C++ обеспечивает _cs,  _ds, _es и _ss типы указа-
телей. Более подробная информация приведена в разделе "Смешан-
ные модели программирования и модификаторы адресации" в Библи-
отечном справочнике.
     Примечание. Borland  C++ не поддерживает встроенных функ-
ций.

                    Соглашения о регистрах

     Borland C++ и Microsoft С требуют, чтобы вызываемая прог-
рамма сохраняла DS, SS, SI, DI и BP. Microsoft С требует, что-
бы состояние флага направления сохранялось  во  время  вызовов
функций. Borland C++ в настоящее время не делает никаких пред-
положений о состоянии флага направления.

           Возвращаемые значения с плавающей точкой

     В Microsoft C _cdecl приводит к тому,что значения с  пла-
вающей  точкой и с двойной точностью возвращаются в глобальной
переменной __fac ( сумматор плавающей  точки).Переменные  типа
long doubles возвращаются в NDP стеке._pascal заставляет вызы-
вающую программу размещать пространство на стеке и  передавать
адрес  функции.Функция сохраняет возвращаемое значение и возв-
ращает адрес.
     В Borland  C++ значения с плавающей точкой возвращаются в
NDP стеке.

            Структуры,возвращаемые в виде значения

     В Microsoft C откомпилированная и  об`явленная  c  _cdecl
функция возвращает указатель в статистическую ячейку. Эта ста-
тистическая ячейка создается  на  функциональной  основе.  Для
функции,  объявленной с _pascal вызывающая программа размещает
пространство на стеке для возвращаемого  значения.  Вызывающая
программа  передает адрес для возвращаемого значения в скрытый
аргумент функции.
     Borland C++ возвращает 1-байтовые структуры в AL,  2-бай-
товые структуры в AX и 4-байтовые структуры в  AX  и  DX.  Для
3-байтовых структур и структур,  больших 4-байтов,  компилятор
передает скрытый аргумент (удаленный указатель) функции, кото-
рый сообщает функции, куда возвращать структуру.


























